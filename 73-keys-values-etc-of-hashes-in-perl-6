
		<p>Today, we will take a look at a few methods of the <tt>Hash</tt> class that return all hash keys or values or both:</p>
<pre>&gt; my %h = H =&gt; &#39;Hydrogen&#39;, He =&gt; &#39;Helium&#39;, Li =&gt; &#39;Lithium&#39;;
{H =&gt; Hydrogen, He =&gt; Helium, Li =&gt; Lithium}

&gt; %h.<strong>keys</strong>;
(H Li He)

&gt; %h.<strong>values</strong>;
(Hydrogen Lithium Helium)

&gt; %h.<strong>kv</strong>;
(H Hydrogen Li Lithium He Helium)</pre>
<p>While you may want to go directly to the src/core/Hash.pm6 file to see the definitions of the methods, you will not find them there. The <tt>Hash</tt> class is a child of <tt>Map</tt>, and all these methods are defined in src/core/Map.pm6. Getting keys and values is simple:</p>
<pre>multi method keys(Map:D:) {
    Seq.new(Rakudo::Iterator.Mappy-keys(self))
}

multi method values(Map:D:) {
    Seq.new(Rakudo::Iterator.Mappy-values(self))
}

</pre>
<p>For the <tt>kv</tt> method, more work has to be done:</p>
<pre>multi method kv(Map:D:) {
    Seq.new(class :: does Rakudo::Iterator::Mappy {
        has int $!on-value;

        method pull-one() is raw {
            . . .
        }
        method skip-one() {
            . . .
        }
        method push-all($target --&gt; IterationEnd) {
            . . .
        }
    }.new(self))
}</pre>
<p>As you see, the method returns a sequence that is built using an anonymous class implementing the <tt>Rakudo::Iterator::Mappy</tt> role. We already saw how this approach is used in combination with <a href="https://perl6.online/2018/02/05/47-push-all-optimisation/">defining <tt>pull-one</tt> and <tt>push-all</tt> methods</a>.</p>
<p>Let us look at another set of methods, pairs and antipairs. One of them is simple and straightforward:</p>
<pre>multi method pairs(Map:D:) {
    Seq.new(self.iterator)
}</pre>
<p>Another one is using an intermediate class:</p>
<pre>multi method antipairs(Map:D:) {
    Seq.new(class :: does Rakudo::Iterator::Mappy {
        method pull-one() {
            . . .
        }
        method push-all($target --&gt; IterationEnd) {
        . . .
        }
    }.new(self))
}</pre>
<p>Both methods produce results of the same structure:</p>
<pre>&gt; %h.<strong>antipairs</strong>
(Hydrogen =&gt; H Lithium =&gt; Li Helium =&gt; He)

&gt; %h.<strong>pairs</strong>
(H =&gt; Hydrogen Li =&gt; Lithium He =&gt; Helium)</pre>
<p> </p>
<div class="sharedaddy sd-like-enabled sd-sharing-enabled" id="jp-post-flair"><div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><h3 class="sd-title">Share this:</h3><div class="sd-content"><ul><li class="share-twitter"><a class="share-twitter sd-button share-icon" data-shared="sharing-twitter-726" href="https://perl6.online/2018/04/07/73-keys-values-etc-of-hashes-in-perl-6/?share=twitter" rel="nofollow" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-facebook"><a class="share-facebook sd-button share-icon" data-shared="sharing-facebook-726" href="https://perl6.online/2018/04/07/73-keys-values-etc-of-hashes-in-perl-6/?share=facebook" rel="nofollow" target="_blank" title="Click to share on Facebook"><span>Facebook</span></a></li><li class="share-google-plus-1"><a class="share-google-plus-1 sd-button share-icon" data-shared="sharing-google-726" href="https://perl6.online/2018/04/07/73-keys-values-etc-of-hashes-in-perl-6/?share=google-plus-1" rel="nofollow" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-end"></li></ul></div></div></div><div class="sharedaddy sd-block sd-like jetpack-likes-widget-wrapper jetpack-likes-widget-unloaded" data-name="like-post-frame-139853928-726-5afe9d3a05aec" data-src="//widgets.wp.com/likes/index.html?ver=20180319#blog_id=139853928&amp;post_id=726&amp;origin=inperl6.wordpress.com&amp;obj_id=139853928-726-5afe9d3a05aec" id="like-post-wrapper-139853928-726-5afe9d3a05aec"><h3 class="sd-title">Like this:</h3><div class="likes-widget-placeholder post-likes-widget-placeholder" style="height: 55px;"><span class="button"><span>Like</span></span> <span class="loading">Loading...</span></div><span class="sd-text-color"></span><a class="sd-link-color"></a></div>
<div class="jp-relatedposts" id="jp-relatedposts">
	<h3 class="jp-relatedposts-headline"><em>Related</em></h3>
</div></div>	
